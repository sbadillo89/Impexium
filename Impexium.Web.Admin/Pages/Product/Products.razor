@page "/product"
@inject IJSRuntime jsr
@inject NavigationManager navigation
@inject IProductRepository productRepository


<div class="container">
    <div class="justify-content-center align-items-center">
        <div class="my-lg-4">
            <h3 class="text-danger flex-grow-1 font-weight-bold">List of Products</h3>
        </div>
        <div>
            <table class="table table-hover">
                <thead>
                    <tr class="bg-danger text-white">
                        <th scope="col">Name</th>
                        <th scope="col">Description</th>
                        <th scope="col">Price</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Created date</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (ProductList != null)
                    {
                        foreach (var product in ProductList)
                        {
                            <tr>
                                <td>@product.Name</td>
                                <td>@product.Description</td>
                                <td>@product.Price</td>
                                <td>@product.Quantity</td>
                                <td>@product.CreatedDate</td>
                                <td>
                                    <a href="product/edit/@product.Id" class="btn btn-warning btn-sm" role="button">Edit</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="font-italic">No data available yet...</td>
                        </tr>
                    }
                </tbody>
            </table>

            <a href="product/add" class="btn btn-danger" role="button">Add product</a>
        </div>

    </div>
</div>


@code {

    IEnumerable<Product> ProductList { get; set; }
    string userData = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        userData = await jsr.InvokeAsync<string>("localStorage.getItem", "token-impexium").ConfigureAwait(false);
        DateTime expireDate = DateTime.MinValue;
        if (!string.IsNullOrEmpty(userData))
        {
            ProductList = await productRepository.GetAllAsync();
        }
    }


}
